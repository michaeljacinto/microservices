openapi: 3.0.0
info:
  description: This APIA provides audit info
  version: "1.0.0"
  title: Audit API
  contact:
    email: mjacinto3@bcit.ca
paths:
  /sellorder:
    get:
      summary: gets a sell order from history
      operationId: app.get_stock_sell_order
      description: Gets stock sell order from the event store
      parameters:
        - name: index
          in: query
          description: Gets the stock sell order at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successfully returned a stock sell order event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/SellOrder"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /buyorder:
    get:
      summary: gets a buy order from history
      operationId: app.get_stock_buy_order
      description: Gets stock buy order from the event store
      parameters:
        - name: index
          in: query
          description: Gets the stock buy order at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successfully returned a stock buy order event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/BuyOrder"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    BuyOrder:
      required:
        - investor_id
        - stock_id
        - quantity
        - bid_price
        - timestamp
      properties:
        investor_id:
          type: string
          format: uuid
          example: b4086dac-0ffe-11ec-82a8-0242ac130003
        stock_id:
          type: string
          example: TSLA
        quantity:
          type: integer
          format: int32
          example: 100
        bid_price:
          type: number
          format: double
          example: 100.04
        timestamp:
          type: string
          format: date-time
          example: "2021-08-12T20:17:46"
      type: object

    SellOrder:
      required:
        - investor_id
        - stock_id
        - quantity
        - ask_price
        - timestamp
      properties:
        investor_id:
          type: string
          format: uuid
          example: b4086dac-0ffe-11ec-82a8-0242ac130003
        stock_id:
          type: string
          example: AAPL
        quantity:
          type: integer
          format: int32
          example: 300
        ask_price:
          type: number
          format: double
          example: 100.44
        timestamp:
          type: string
          format: date-time
          example: "2021-08-12T20:17:46"
      type: object
